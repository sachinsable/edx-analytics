package json;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Date;
import java.util.zip.GZIPInputStream;

public class Filehandler {
	public static void main(String args[])
	{
		File mydirectory = new File("/home/sachin/workspace/json/src/json/log");
		System.out.println(mydirectory.isDirectory());
		File names[] = mydirectory.listFiles();
		Database db = new Database();
		long lastmdate=db.getfilelastmodified();
		ArrayList<File> left = new ArrayList<File>();
		ArrayList<Long> date = new ArrayList<Long>();
		for(int i=0;i<names.length;i++)
		{
			System.out.println(names[i].lastModified()+" "+names[i]);
			if(names[i].lastModified()>lastmdate)
			{
				left.add(names[i]);
				date.add(names[i].lastModified());
			}
		}
		//db.setfilelastmodified(names[4].lastModified());
		for (int c = 0; c < ( date.size() - 1 ); c++) 
		{
		   for (int d = 0; d < date.size() - c - 1; d++) 
		   {
			   if (date.get(d) > date.get(d+1)) /* For descending order use < */
			   {
				   long swap = date.get(d);
				   date.set(d,date.get(d+1));
				   date.set(d+1,swap);
			   }
		   }
		}
		long table[][] = new long[left.size()][2];
		for(int i=0;i<left.size();i++)
		{
			table[i][0] = i;
			table[i][1] = left.get(i).lastModified();
			System.out.println(table[i][0]+" "+table[i][1]);
		}
		/*{
			   long swap = table[0][1];
			   table[0][1]=table[1][1];
			   table[1][1]=swap;
		   }
		for(int i=0;i<left.size();i++)
		{
			System.out.println(table[i][0]+" "+table[i][1]);
		}*/
		   
		for (int c = 0; c <  left.size(); c++) 
		{
		   for (int d = 0; d < left.size() - c - 1; d++) 
		   {
			   if(table[d][1] > table[d+1][1])
			   {
				   long swap = table[d][1];
				   table[d][1]=table[d+1][1];
				   table[d+1][1]=swap;
			   }
		   }
		}
		for(int i=0;i<left.size();i++)
		{
			table[i][0] = i;
			table[i][1] = left.get(i).lastModified();
			Date d = new Date(table[i][1]);
			System.out.println(table[i][0]+" "+d);
		}
		/*
		System.out.println(left.get(i));
		InputStream is=null;
		try
		{
			is = new GZIPInputStream(new FileInputStream(left.get(i)));
			Reader decoder = new InputStreamReader(is, "UTF-8");
			BufferedReader buffered = new BufferedReader(decoder);
			String line = buffered.readLine();
			System.out.println(line);
			//System.out.println((char)is.re);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}*/
		InputStream is=null;
		boolean first=true;
		String line;
		LineParser lp = new LineParser();
		for(int i=0;i<left.size();i++)
		{
			try
			{
				if(first)
				{
					int linenum = db.getlinenum();
					is = new GZIPInputStream(new FileInputStream(left.get((int) table[i][1])));
					Reader decoder = new InputStreamReader(is, "UTF-8");
					BufferedReader buffered = new BufferedReader(decoder);
					int j=0;
					while((line=buffered.readLine())!=null&&j<linenum)
					{
						j++;
					}
					while((line=buffered.readLine())!=null)
					{
						lp.parseline(line);
					}
					first=false;
				}
				else
				{
					int linenum = db.getlinenum();
					is = new GZIPInputStream(new FileInputStream(left.get((int) table[i][1])));
					Reader decoder = new InputStreamReader(is, "UTF-8");
					BufferedReader buffered = new BufferedReader(decoder);
					while((line=buffered.readLine())!=null)
					{
						lp.parseline(line);
					}
				}
			}
			catch(Exception e)
			{
				System.out.println("error while reading tar.gz files");
			}
		}
	}
}